<!--[onload;tplvars;vacancies='GenevaNetClientVacancies']-->

<!-- 20111115 modified per email -->
<!-- 20111130 modified to include Shift Status tab -->
<!-- 20111209 chain ClientCandidateDocuments on to bottom -->
<!-- 20111212 modified to include Location column in second place -->
<!-- 20111223 modified to rearrange action details row -->
<!-- 20120126 modified to include Request button -->
<!-- 20120424 modified to remove Reference and Vac Ref columns, and to cure issue with tidying up after changing tabs -->
<!-- 20120503 Client Note header changed to Client Comment -->
<!-- 20120508 modified to avoid resetting header images -->
<!-- 20120529 refresh after diary event without redrawing entire table -->
<!-- 20120604 created by line added to detail -->
<!-- 20120618 limit of 150 characters put on textarea, and red highlight added on over-limit, and popup comment -->
<!-- 20120704 extra detail on cancel including popup -->
<!-- 20120706 start and finish editing improved -->

<script type="text/javascript">
	
$(document).ready(function(){

	$('#cliPlacDlg').remove();  // If returning to this tab, any prior instance of the placement dialog must be removed
	$('form').next('tr').remove(); // and also any prior detail divisions
	$('form').remove();
	
	$('body').undelegate('#cliPlacDlg','PlacementEvent');  // Ditto the delegation to body
	IQXInitSection("#divclivacs");
		
	$('#tblclivacs').data('IQXdtDateFilter',{dateColumn:3,clearButtonText:"Clear"});
	var oTbl=$('#tblclivacs').dataTable({
		"bJQueryUI": false,
		"sPaginationType": "full_numbers",
		"sDom": 'lDf<"clear">rtip',
		"iDisplayLength":25,
		"aaSorting": [ [0,'asc'],[3,'asc'],[4,'asc'],[5,'asc'],[6,'asc'] ],
		"aoColumnDefs": [{aTargets:[0],fnRender: function(oObj){
			if (oObj.aData[16]){
				return oObj.aData[0]+'<br/>'+oObj.aData[16];
			} else {
				return oObj.aData[0];
			}
		}},
		{aTargets:[10,11,12,13,14,],bVisible:false,bSearchable:false}]
	});
	if (!IQXDeepLink("R",oTbl)){
		setThisWeek(oTbl);
		}
		
	$("#divclivacs").delegate("tbody tr button", "click", function(e){
		if (this.id>''){var RowID=(this.id.substr(1));}
		var nRow=oTbl.fnGetPosition($(this).closest('tr').prev('tr').get(0));
		var sBtn=this.innerHTML; //Button text
		var aRow=oTbl.fnGetData(nRow);
		var sVacID=aRow[12];
		var sPlanID=aRow[13];
		var sCaption=aRow[0];
		doVacancyAction(sBtn,sVacID,sPlanID,oTbl,nRow,sCaption,RowID);
		});
		
	});
	

function setThisWeek(oTbl){
	// populate dates into search boxes at top of form
	
	var dDat = new Date();
	var nDayMillisecs = 1000 * 60 * 60 * 24;
	while (dDat.getDay() != 1) {
		dDat.setTime(dDat.getTime() - nDayMillisecs);
	}
	$('input.dataTables_dateRange_from','#divclivacs').val($.datepicker.formatDate('dd/mm/yy', dDat));
	dDat.setTime(dDat.getTime() + nDayMillisecs*6);
	$('input.dataTables_dateRange_to','#divclivacs').val($.datepicker.formatDate('dd/mm/yy', dDat));
	var oSettings = oTbl.fnSettings();	
	oSettings.oApi._fnReDraw(oSettings);
	}

	
function doVacancyAction(sBtn,sVacID,sPlanID,oTbl,nRow,sCaption,RowID){
	// perform action raised by clicking a button, raised in Ready()
	
	$IQXFormContext={blocktabswitch:true, switchmessage:"Please close any dialog before switching."};

	$("#divclivacs").data("selectedvacancy",{
		vacancyid: sVacID,
		shiftplanid: sPlanID,
		table: oTbl,
		tablerow: nRow,
		caption: sCaption,
		rowid: RowID
	});

	if (sBtn=='Fill') {ActionFill(RowID,sCaption);}
	if (sBtn=='Confirm'){ActionConfirm(RowID);}
	if (sBtn=='Cancel'){ActionCancel(RowID,sCaption);}
	if (sBtn=='Comment'){ActionComment(RowID);}
	if (sBtn=='Reject'){ActionReject(RowID);}
	if (sBtn=='Request'){ActionRequest(RowID);}
	if (sBtn=='Location'){ActionLocation(RowID);}
	
}

function actionCleanup(){
	// remove data from temp recordset populated in doVacancyAction()
	
	$IQXFormContext = null;
	if (!$('#divclivacs').data('selectedvacancy')) return; // Already cleaned up
	$("#divclivacs").removeData("selectedvacancy");
};
	
	
function ActionFill(rowid,caption){
	// Open subform to select candidate
		
		
	if ($('#divclivacs').data('dlgIsLoaded')) {
		$('#cliPlacDlg').dialog('option','title',caption);
		$('#cliPlacDlg').dialog('open');
	} else {
		$('body').delegate('#cliPlacDlg','PlacementEvent',function(e,sType,sID,sName){
			if (sType=='DialogCreate'){
				$('#divclivacs').data('dlgIsLoaded',true);
				$('#cliPlacDlg').dialog('option','title',$('#divclivacs').data('selectedvacancy').caption);
			} else if (sType=='DialogClose'){
				actionCleanup();
				RemoveForm(rowid,'');
			} else if (sType=='Request'){
				doFillVacancy(sID,sName);
			}
		});
		
		$('#TempShiftDate').val($('#SD'+rowid).html().substring(4));
		IQXChain('#divclivacFillerDlg', {action: 'load', page: 'clientemployeestoplacedialog'});
	}
} 

function ActionConfirm(rowid){
	// Confirm action, forwarded to DiaryAddSave()
	
	var InsertString=CompileReferences(rowid);
	$('#N'+rowid).val(InsertString);
	DiaryAddSave(rowid,'F');
} 

function ActionCancel(rowid,caption){
	// Cancel action, forwarded to DiaryAddSave()
		
	var Headline='Cancel this Shift?';
	if($('#ComboCancel option:selected').text() != ''){
		IQXUIDialog(Headline,{xDlgType:'YesNo',modal:false,title:caption},function(){
			var InsertString=CompileReferences(rowid);
			$('#N'+rowid).val(InsertString+$('#ComboCancel option:selected').text());
			DiaryAddSave(rowid,'N');
		})
	}else{
		IQXUIDialog('Choose a Cancel reason',{xDlgType:'Ok',modal:false,title:caption}) 
	};
	return;
} 

function ActionComment(rowid){
	// Comment action, forwarded to DiaryAddSave()
	
	var InsertString=CompileReferences(rowid);
	$('#N'+rowid).val(InsertString+$('#N'+rowid).val());	
	DiaryAddSave(rowid,'M');
}

function ActionReject(rowid){
	// Reject action, forwarded to DiaryAddSave()
	
	if($('#ComboCancel option:selected').text() != ''){
		var InsertString=CompileReferences(rowid);
		$('#N'+rowid).val(InsertString+$('#ComboCancel option:selected').text());
		DiaryAddSave(rowid,'R');
		IQXUIDialog('Remeber to create a new Requirement',{xDlgType:'Ok',modal:false,title:caption})
	}else{
		IQXUIDialog('Choose a reject reason',{xDlgType:'Ok',modal:false,title:caption})
	}
}

function ActionRequest(rowid){
	// Request candidate action, forwarded to DiaryAddSave()
	
	var InsertString=CompileReferences(rowid);
	$('#N'+rowid).val(InsertString+$('#N'+rowid).val());	
	DiaryAddSave(rowid,'Q');
}

function ActionLocation(rowid){
	// Request new location, forwarded to DiaryAddSave()
	
	if(InsertString !=''){
		var InsertString=CompileReferences(rowid);
		$('#N'+rowid).val(InsertString+$('#N'+rowid).val());
		DiaryAddSave(rowid,'L');
	}
	
}


function CompileReferences(rowid){
	// Create reference list for notifications
	
	var RequestName=$('#CandReq'+rowid).val();
	var offset=$('#'+rowid).closest('tr').children('td').next('td').next('td');
	var PONo=offset.html();
	var ShiftRef=offset.next('td').next('td').next('td').next('td').html();
	var CR=String.fromCharCode(13)+String.fromCharCode(10);
	
	if(RequestName>''){	//if using free text candidate request
		var InsertString='Request: '+RequestName+';'+CR+'Shift Ref: '+ShiftRef+';';
	}else{
		var InsertString='Reference: '+PONo+';'+CR+'Shift Ref: '+ShiftRef+';'+CR+'Note: ';
	}
	return InsertString;
}	

function DiaryAddSave(RowID,Action){
	// send request to database
	// retreive response, and use to update parent row with new message and colour
	
	$('#pTransactionType','#F'+RowID).val(Action);
			
	$('#F'+RowID).attr('action','IQXPost.php?proc=GenevaNetClientVacanciesLineStatusUpdate');
	$('#F'+RowID).ajaxSubmit(
		{
		success: function(data, textStatus){
			//alert(data+'#'+textStatus);
			var HashPos=data.indexOf('#');
			var StatusString='';
			var ReturnMessage='';
			if (HashPos > 0) {
				StatusString=data.substr(0,HashPos);
				ReturnMessage=data.substr(HashPos+1);
				}
			else
				{
				StatusString=data;
				};
			if (textStatus == 'success') {
				RemoveForm(RowID,ReturnMessage);
				}else{
					$('#SFormError').html(data);
				}
				RefreshRow(RowID);
			},
		error: function(data,textStatus){
			$('#SFormError').html(data);
			},
		dataType: "text"
		});
		$IQXFormContext = null;	// otherwise trying to open the requirements popups fail
		
	};
	
function RefreshRow(RowID){
	// refresh Client Comment and Temp without redrawing table
	
	$('#'+RowID).attr('action','IQXPost.php?proc=GenevaNetClientVacanciesSingleLineRefresh?pLineNo='+RowID);
	$('#'+RowID).ajaxSubmit(
		{
		success: function(data, textStatus){
			var SourceString = data;
			var TempString=SourceString.substr(0,SourceString.indexOf(':'));
			SourceString=SourceString.substr(SourceString.indexOf(':')+1);
			var ClientString=SourceString.substr(0,SourceString.indexOf(':'));
			var LocationString=SourceString.substr(SourceString.indexOf(':')+1);
			var OffsetPosition=$('#Info'+RowID).prev('td').children('span');
			
			OffsetPosition.html(TempString);
			OffsetPosition=OffsetPosition.parent().prev('td');
			OffsetPosition.html(ClientString);
			OffsetPosition=OffsetPosition.prev('td').prev('td').prev('td').prev('td').prev('td').prev('td');
			OffsetPosition.html(LocationString);
		},
		error: function(data,textStatus){
			$('#ErrorMessage').html('error '+data);
			},
		dataType: "text"
		});	
}	

function RemoveForm(RowID,State){
	// Update cell and remove subform once submitted and return img to original

	if ($('form').length > 0) {	// only call if form available to close
		if (State>'') {
			$('#Info' + RowID).attr('class', 'Status' + State.substr(0, 1));
			$('#Info' + RowID).html(State.substr(1,State.indexOf(':')-1));
			$('#Info' + RowID).attr('title', State.substr(State.indexOf(':')+1));
		}
		var Row = RowID;
		if (!RowID) {	// if blank then returning from fill popup, so choose only open form and set colour as provisional
			Row = $('form').attr('id').substr(1);
			$('#Info' + Row).attr('class', 'StatusP');
		}
		$('img dataTableExpand').attr('src', 'css/images/details_open.png');
		$('img dataTableExpand').attr('title', 'Show Details');
		$('#I' + Row).attr('src', 'css/images/details_open.png');
		$('#I' + Row).attr('title', 'Show Details');
		$('#' + Row).next('tr').remove();
	}
}

function doFillVacancy(personid,personname) {
	// called by action on clientemployeestoplacedialog.html
	// use temp table declared in ready() to update parent row and send request to database
	
	var filldata=$("#divclivacs").data('selectedvacancy');
	var postdata={pvacancyid:filldata.vacancyid,pshiftplanid:filldata.shiftplanid,ppersonid:personid};
	var nxt={action:'func',func:function(){
		filldata.table.fnUpdate('1',filldata.tablerow,10,false,false);  // Filled
		filldata.table.fnUpdate(personname,filldata.tablerow,8,false,false);
		filldata.table.fnUpdate('',filldata.tablerow,9,false,true);  // Force fnRender. Avoiding redraw because filtering not affected (although sorting could be if currently sorted on candidate)
		$('#cliPlacDlg').dialog('close');
	}};
	IQXChain('',{action:'send',proc:'NetVacancyFill',postdata:postdata,nextlink:nxt});
}


function doAddVacancies(sPage) {
	// create dialog for Add Vacancies page from 'clientnewshiftmultidayrequirement.html' or 'clientnewcontractrequirement.html'
	
	IQXChain('#divclivacNewReqDlg',{action:'load',page:sPage});
}

function OpenCandidateDetails(CandLink,DeptID){
	// open subform with candidate details, from click action on FilledBy column
	
	if (CandLink.id) {
		hideAnyCluetips();
		IQXChain('#CandDetailsPopups', {
			action: 'load',
			page: 'clientpreviousemployeedetails&pPersonID=' + encodeURIComponent(CandLink.id) + '&pid=' + encodeURIComponent(CandLink.id) + '&pname=' + encodeURIComponent(CandLink.innerHTML) + '&pDeptID=A' + encodeURIComponent(DeptID)
		});
	}	
}

function showcanddocuments(persid) {
	IQXChain('#CandDetailsPopups',{action:'load',page:'ClientCandidateDocuments&pPersonID='+encodeURIComponent(persid)});
	}
	
function GetCancelList(ListLength){
	// ListLength = 0: List for Cancel shift
	//				1: List for Reject client
	var ResultString;
	$.get('IQXRawData.php?page=GenevaNetClientShiftCancelReasonsOuter?NeedsRefill='+ListLength, function(data,textStatus){
			ResultString = data;		// below: lose xml headers and add option tags
			var StartPoint = ResultString.indexOf('![CDATA[');
			var Endpoint = ResultString.indexOf(']]><');
			ResultString = ResultString.substring(StartPoint + 8, Endpoint);
			ResultString = "<option value=''></option>" + ResultString + "</option>";
			$('#ComboCancel').html(ResultString);
		});
	}

function showShiftActions(img,Rowid,CancelButton,ConfirmButton,RejectButton,FillButton,Note) {
	// Create subform for notes
		
	var row=$(img).closest('tr').get(0);
	var dt=$("#tblcliprevtemp").data('dataTable');
	var bOpen=img.src.match(/details_open/);
	var TargetDiv;
	
	var frm=0;
	if($('form').attr('id')){
		frm=$('form').attr('id');	// if there is a form then close it
	}

	if(frm != 0){
		var RowToClose=frm.substr(1);
		if($('#' + RowToClose).next('tr').attr('id')){//
		}else{
			$('#' + RowToClose).next('tr').remove();
			$('#I'+RowToClose).attr('src', 'css/images/details_open.png');
			$('#I'+RowToClose).attr('title', 'Show Details');
		};	
	
		if (!bOpen){
		img.src = 'css/images/details_open.png';
		img.title = 'Show Details';
		return;
		}
	}

	img.src = 'css/images/details_close.png';
	img.title = 'Hide Details';
	$(row).rowafter({dataTable:dt,divs:[{divclass:"zoomeddivCurrent"}]});
	TargetDiv=$(row).next('tr').find("div.zoomeddivCurrent");
	var FormString='<form id="F'+Rowid+'" method="post" >';
	FormString=FormString+"<span>"+$('#CB'+Rowid).val()+" "+$('#CT'+Rowid).val()+"</span><hr />";
	if (CancelButton=='1') {FormString=FormString+ "<span><select id='ComboCancel' name='pCancelReason' style='FixedWidth' onClick='EnableButton(C"+Rowid+")'></select></span><span style='float:right' ><button class='fixedA' type='button' id='C"+Rowid+"' >Cancel</button></span><hr />";}
	if (RejectButton=='1') {FormString=FormString+ "<span><select id='ComboCancel' name='pCancelReason' onClick='EnableButton(R"+Rowid+")' ></select></span><span style='float:right'><button class='fixedA' type='button' id='R"+Rowid+"' >Reject</button></span><hr />";}
	if (ConfirmButton=='1' && '[var.x_rights.AUTHORISEJOBS;noerr]'=='1') {FormString=FormString+ "<span><button class='fixed' type='button' id='D"+Rowid+"' >Confirm</button></span><hr />";}
	if (FillButton=='1' && '[var.x_rights.FILLJOBS;noerr]'=='1') {
		FormString=FormString+ "<span><input id='CandReq"+Rowid+"' size='35' onClick='EnableButton(Q"+Rowid+")'></input></span><span style='float:right'><button class='fixedA' type='button' id='Q"+Rowid+"' >Request</button></span><hr />"; //use this line for free text name entry
		}
	FormString=FormString+"<span><textarea id='N"+Rowid+"' name='pNote' rows='3' cols='40' onkeypress='NoteCountdown(this)' onClick='EnableButton(M"+Rowid+")' /></span>&nbsp;<span id='CharCount'>150</span><span style='float:right'><button  class='fixedA' type='button' id='M"+Rowid+"' >Comment</button></span><hr />";
	if (CancelButton=='1'){FormString=FormString+"<span><input id='Loc"+Rowid+"' name='pLocation' size='35' class='normal' onClick='EnableButton(L"+Rowid+")' /></span><span style='float:right'><button  class='fixedA' type='button' id='L"+Rowid+"' >Location</button></span>";}
	FormString=FormString+"<input type='hidden' id='pLineNo' name='pLineNo' value= '"+Rowid+"' />";
	FormString=FormString+"<input type='hidden' id='pTransactionType' name='pTransactionType' />";
	FormString=FormString+"<input type='hidden' id='pOurRef' name='pOurRef' />";
	FormString=FormString+"</form>";
	FormString=FormString+"<span id='SFormError' class='errormessage'></span>";
	TargetDiv.html(TargetDiv.html() + FormString);
	GetCancelList(RejectButton);	// load contents afterwards, to give ajax a chance to retreive data
									// Use different list to reject candidate.
	$('button.fixedA').attr('disabled','disabled');
	}

function EnableButton(ButtonID){
	// set all buttons to disabled, except for the one which has been activated
	
	// remember about the request button
	$('button.fixedA').attr('disabled','disabled');
	$(ButtonID).removeAttr('disabled');
}	

function NoteCountdown(InputID){
	// character count for note 
	
	var FieldLength=149-$(InputID).val().length;
	if (FieldLength <= 0) {
		$(InputID).attr('class','Overflow');
		$(InputID).val($(InputID).val().substring(0,149));
		$('#CharCount').html('0');
	} else{
		$(InputID).attr('class','Normal');
		$('#CharCount').html(FieldLength);
	}
	
}

function ShowTT(CellID){
	// create ToolTip popup for long text

	var txt=$(CellID).children('span').html();
	var x=$(CellID).position().left+30;
	var y=$(CellID).position().top+160;
		
	$('#divPopup').css('top',y);
	$('#divPopup').css('left',x);
	$('#divPopup').show();
	$('#divPopup').html(txt);
}

function EditTime(CellID){
	// Make edit box visible if shift is unfilled
	
	var rowid=$(CellID).attr('id').substring(9);
	var WhichTime=$(CellID).attr('id').substring(4,5);
	var Status=$('#Info'+$(CellID).attr('id').substring(9)).html().substring(0,5);
	
	if(Status == "Unfil" || Status == "In Pr"){ // only edit if Unfilled or In Progress
		var txt=$(CellID).html();
		$('#Span'+WhichTime+'Time'+rowid).css('display','none');
		$('#Input'+WhichTime+'Time'+rowid).css('display','inline');
		$('#Input'+WhichTime+'Time'+rowid).css('visibility','visible');
		$('#Input'+WhichTime+'Time'+rowid).removeAttr('readonly');
		$('#Input'+WhichTime+'Time'+rowid).val(txt);
	}
}

function UpdateTime(CellID){
	// Edit time and send back to database
	
	var rowid=$(CellID).attr('id').substring(10);
	var WhichTime=$(CellID).attr('id').substring(5,6);
	var NewTime=$('#Input'+WhichTime+'Time'+rowid).val();
	var OldTime=$('#Span'+WhichTime+'Time'+rowid).html();
		
	if(NewTime != OldTime){
		$('#FormDiv').html('<Form id="FrmTime"></Form>');
		$('#FrmTime').attr('action', 'IQXPost.php?proc=GenevaNetClientVacanciesLineTimesUpdate?pRowData='+rowid+'~'+NewTime+'~'+WhichTime);
		$('#FrmTime').ajaxSubmit(
			{
				
			success: function(data, textStatus){
				
				if (data.substring(0,7)=='success') {
					$('#ErrorMessage').html('');
					$('#Span'+WhichTime+'Time'+rowid).html(data.substring(8));
					$('#Span'+WhichTime+'Time'+rowid).css('display','inline');
					$('#Span'+WhichTime+'Time'+rowid).css('visibility','visible');
					$('#Input'+WhichTime+'Time'+rowid).css('visibility','hidden');
					$('#Input'+WhichTime+'Time'+rowid).css('display','none');
				}else {
					$('#ErrorMessage').html('Error: ' + data);
				}
			},
			error: function(data, textStatus){
				
				$('#ErrorMessage').html('Error: ' + data);	
			},
			dataType: "text"
		});	
	}else{	// no change
		$('#Span'+WhichTime+'Time'+rowid).html(OldTime);
		$('#Span'+WhichTime+'Time'+rowid).css('visibility','visible');
		$('#Span'+WhichTime+'Time'+rowid).css('display','inline');
		$('#Input'+WhichTime+'Time'+rowid).css('visibility','hidden');
	}

}

function HideTime(CellID){
	// hide time span if no change
	
	$('#'+$(CellID).attr('id')).css('visibility','hidden');	
}

</script>

<div class="usertext">[onload;file=txt_client_requirements_top.html;noerr]</div>
<div id="divclivacs">
<div id="divPopup" onclick="$(this).hide()" class="ToolTipPopup"></div>
<span id="ErrorMessage" class="errormessage">[var.x_errormessage]</span>
<table class="Xtablesorter" id="tblclivacs">
	<thead>
		<tr>
		<th>Position</th>
		<th>Location</th>
		<th>PO Number</th>
		<th>Start Date</th>
		<th>Start Time</th>
		<th>Finish Time</th>
		<th>Shift Ref</th>
		<th>Client Comment</th>
		<th>Geneva Temp</th>
		<th></th>
		<th>Filled</th>
		<th>Unconfirmed</th>
		<th>VacancyID</th>
		<th>TempShiftPlanID</th>
		<th>Shift Description</th>
		<th></th>
		</tr>
	</thead>
	<tbody>
		<tr id="[vacancies.RowID;block=tr]">
	    <td>[vacancies.Position;noerr]</td>
	    <td>[vacancies.Location;noerr]</td>
	    <td>[vacancies.PONumber;noerr]</td>
	    <td id="SD[vacancies.RowID]" class="longdate">[vacancies.StartDate;noerr]</td>
	    <td id="STime[vacancies.RowID]" class="time" ><span id="SpanSTime[vacancies.RowID]" onclick="EditTime(this)">[vacancies.StartTime;noerr]</span><input id="InputSTime[vacancies.RowID]" class="validFourDigitTime" style="visibility:hidden;display:none" onblur="UpdateTime(this)" ></input></td>
	    <td id="FTime[vacancies.RowID]" class="time" ><span id="SpanFTime[vacancies.RowID]" onclick="EditTime(this)">[vacancies.FinishTime;noerr]</span><input id="InputFTime[vacancies.RowID]" class="validFourDigitTime" style="visibility:hidden;display:none" onblur="UpdateTime(this)"></input></td>
	    <td>[vacancies.ShiftRef;noerr]</td>
	    <td id="CC[vacancies.ShiftRef]" onclick="ShowTT(this)" >[vacancies.ClientCommentShort;noerr]<span style="display:none">[vacancies.ClientComment;noerr]</span></td>
		<td><span id="[vacancies.PersonID;noerr]" class="TooltipLink[vacancies.Filled;noerr]" onclick="OpenCandidateDetails(this,'[vacancies.DepartmentID;noerr]');" >[vacancies.FilledBy;noerr]</span></td>
		<td id="Info[vacancies.RowID]" onclick="ShowTT(this)" class='Status[vacancies.BlockColour;noerr]' title='[vacancies.TextStatus;noerr]'>[vacancies.StatusHead;noerr] [vacancies.WhoCancelled;noerr]<span style="display:none">[vacancies.TextStatus;noerr]</span></td>
		<td>[vacancies.Filled;noerr]</td>
		<td>[vacancies.Unconfirmed;noerr]</td>
		<td>[vacancies.VacancyID;noerr]</td>
		<td>[vacancies.TempShiftPlanID;noerr]</td>
		<td></td>
		<td class="center"><img id="I[vacancies.RowID]" class="dataTableExpand" src="css/images/details_open.png" title="Show Details" onclick="showShiftActions(this,'[vacancies.RowID;]','[vacancies.CancelButton;]','[vacancies.ConfirmButton;]','[vacancies.RejectButton;]','[vacancies.FillButton;]')" /><input id="CB[vacancies.RowID]" type="hidden" value="[vacancies.CreatedBy;noerr]" /><input id="CT[vacancies.RowID]" type="hidden" value="[vacancies.CreateTime;noerr]" /></td>
		</tr>
	</tbody>
</table>
<p>
    <span id="ErrorMessage" class="errormessage">[var.x_errormessage]</span>
</p>
<p id="pclivacbuttons">[onload_add;block=p;when [var.x_rights.ORDERJOBS;noerr]=1]
	<button type="button" id="clivac_addshift" class="fixed" onclick="doAddVacancies('clientnewshiftmultidayrequirement')">
		Add Bookings
	</button>
	<button type="button" id="clivac_addcontract" class="fixed" onclick="doAddVacancies('clientnewcontractrequirement')">
		Add New Contract Requirements
	</button>
</p>
</div>
<div class="usertext">[onload;file=txt_client_requirements_bottom.html;noerr]</div>
<div class="ui-helper-hidden">
	<div id="divclivacFillerDlg"></div>
	<div id="divclivacNewReqDlg"></div>
</div>
<div id="CandDetailsPopups" class="ui-helper-hidden"></div>
<div id="DocDetails" class="ui-helper-hidden"></div>
<input type="hidden" id="TempShiftDate" ></input>
<div id="FormDiv" ></div>


