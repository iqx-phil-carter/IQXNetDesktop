
<?xml version="1.0"?>
<Job autoclose="YES">
  <SetVariable type="S" name="CRLF" sql="select string(char(10))"/>
  <SetVariable type="S" name="TAB" sql="select string(char(9))"/>
  <SetVariable type="S" name="SMTPHost" value="172.16.1.225"/>
  <SetVariable type="S" name="SMTPUserID" value=""/>
  <SetVariable type="S" name="SMTPPassword" value=""/>
  <SetVariable type="S" name="SMTPSender" value="cascade@asarecruitment.co.uk"/>
  <SetVariable type="S" name="MasterAgencyName" value="ASA Recruitment"/>
  <!--Notify Agencies of ModifiedUnfilled, CancelUnfilled, BookedElsewhere, Unfilled-->
  <!--These are all types that send out vacancy details WITHOUT a Worker name; they are handled below-->
  <BeginTransaction/>
  <SQLQuery>
    <SQLSelect><![CDATA[

 SELECT distinct ReNotifyState, CascadedVacancy.CascadedVacancyID as ThisCascadedVacancyID, CompanyAgency.Name as AgencyName, isnull(CascadeDeliveryAddress.DeliveryMethod,'.') as DeliveryMethod, CascadeDeliveryAddress.Address as Address, CascadedVacancy.SecondaryAgencyID as AgencyID,
 Vacancy.RefCode,
 CompanyCli.Name as Client,
 Vacancy.Position,
 if isnull(Vacancy.OtherNotes, '') = '' then 'None' else Vacancy.OtherNotes endif VacNotes,
 Person.Name as Contact,
 if Vacancy.StartDate = CURRENT DATE then 'ASAP' else DATEFORMAT(Vacancy.StartDate, 'Ddd dd Mmm yyyy') endif StartDateString,
 if isnull(Vacancy.FinishDate, '2999-12-31') >= '2999-12-31' then 'ONGOING' else DATEFORMAT(Vacancy.FinishDate, 'Ddd dd Mmm yyyy') endif FinishDateString,
 (select staff.email from staff where vacancy.staffid = staff.staffid) as ConsEmail,
 isnull(GetQuestAnswer('V','CC',Vacancy.VacancyID),ConsEmail,:SMTPSender) as ReturnEmail,
 case ReNotifyState
 when 'ModifiedUnfilled' then 'MODIFIED Unfilled Booking'
 when 'CancelUnfilled' then 'CANCELLED Booking'
 when 'BookedElsewhere' then 'CANCELLED Booking'
 when 'Unfilled' then 'Unfilled Booking'
 when 'FilledByThisAgency' then 'FILLED Booking Confirmation'
 when 'ModifiedAfterFilled' then 'Filled Booking MODIFICATIONS'
 when 'CancelledAfterFilled' then 'CANCELLED Filled Booking'
 when 'UnfilledAfterFilled' then 'Unfilled Booking'
 end as EmailTextTitle,
 case ReNotifyState
 when 'ModifiedUnfilled' then 'The following unfilled booking has been modified since it was last cascaded to you, please see details below'
 when 'CancelUnfilled' then 'We no longer require your assistance to fill the following booking'
 when 'BookedElsewhere' then 'We no longer require your assistance to fill the following booking'
 when 'Unfilled' then 'The following booking, which you were PREVIOUSLY NOTIFIED as NO LONGER REQUIRED, is now available for filling again'
 when 'FilledByThisAgency' then 'You have FILLED the following booking'
 when 'ModifiedAfterFilled' then 'There have been MODIFICATIONS to the following filled booking, please see details below'
 when 'CancelledAfterFilled' then 'The following filled booking, has been CANCELLED'
 when 'UnfilledAfterFilled' then 'The following booking, which you PREVIOUSLY FILLED, is again available for filling'
 end as EmailTextBody,
 (select first name from person key join pay_employee key join employment key join placement where placement.vacancyid=vacancy.vacancyid and pay_employee.SecondaryAgencyID = CascadedVacancy.SecondaryAgencyID) as Candidate,
 GetQuestAnswer(string('V',Vacancy.DepartmentID),'LO',Vacancy.VacancyID) as Location,
 GetQuestAnswer('V','HW',Vacancy.VacancyID) as HoursOfWork,
 GetQuestAnswer('V','DIS',Vacancy.VacancyID) as Disclosure,
 GetQuestAnswer('V','MAN',Vacancy.VacancyID) as Training,
 GetQuestAnswer('V','DT',Vacancy.VacancyID) as Drugs,
 GetQuestAnswer('V','PH',Vacancy.VacancyID) as Photo,
 GetQuestAnswer('V','MED',Vacancy.VacancyID) as Medical, 
 GetQuestAnswer('V','DR',Vacancy.VacancyID) as DressCode
 
 
 FROM CascadedVacancy key join Company as CompanyAgency key left outer join CascadeDeliveryAddress key join Vacancy key join Employment key join (Company as CompanyCli,Person)
 WHERE isnull(CascadedVacancy.ReNotifyState, 'Notified') <> 'Notified' and deliverymethod='E';

				]]></SQLSelect>
    <IfAnyRows>
      <ForEachRow>
        <IfSQL condition=":DeliveryMethod = 'E'">
          <SendEmail subject="{EmailTextTitle} from {MasterAgencyName} - {Position}" smtphost="{SMTPHost}" smtpuserid="{SMTPUserID}" smtpsender="{ReturnEmail}" smtppassword="{SMTPPassword}">
            <EmailRecipients>
              <WriteLn>{Address}</WriteLn>
            </EmailRecipients>
            <EmailBody>
              <Writeln>{EmailTextTitle} for {AgencyName}</Writeln>
              <Writeln/>
              <Writeln>Please note that Vacancy Ref No {RefCode} has changed - {EmailTextBody}. Please hit reply or email candidate details to {ReturnEmail} if appropiate.</Writeln>
              <IfSQL condition="isnull(:Candidate, '') != ''">
                <Writeln/>
                <Writeln>Candidate: {Candidate}</Writeln>
              </IfSQL>
              <Writeln/>
                    <Writeln>{MasterAgencyName} Ref No: {RefCode}</Writeln>
                    <Writeln/>
                    <Writeln>Client Name: {Client}</Writeln>
                    <Writeln/>
                    <Writeln>Job Title: {Position}</Writeln>
                     <Writeln/>
                   <Writeln>Job Description:</Writeln>
                    <Writeln>{VacNotes}</Writeln>                                       
                    <Writeln/>
                    <Writeln>Location: {Location}</Writeln>
                    <Writeln/>     
                     <Writeln>Hours of Work: {HoursofWork}</Writeln>
                    <Writeln/>                       
                    <Writeln>Start Date: {StartDateString}</Writeln>
                    <Writeln/>
                    <Writeln>End Date: {FinishDateString}</Writeln>
                    <Writeln/>
                    <Writeln>It is also essential that all candidates have 2 work references, the right to work in the UK and the following details:</Writeln>
			<Writeln/>
		        <Writeln>{TAB}Disclosure Required: {Disclosure}</Writeln>
		        <Writeln>{TAB}Mandatory Training: {Training}</Writeln>
		        <Writeln>{TAB}Drugs Test Passed: {Drugs}</Writeln>
		        <Writeln>{TAB}PhotoID Required: {Photo}</Writeln>
		        <Writeln>{TAB}Passed Medical Questions: {Medical}</Writeln>
		        <Writeln>{TAB}Dress Code / PPE: {DressCode}</Writeln>
		        <Writeln/>
		        </EmailBody>
          </SendEmail>
          <SQLExec>update CascadedVacancy set ReNotifyState='Notified' where CascadedVacancy.CascadedVacancyID = :ThisCascadedVacancyID</SQLExec>
        </IfSQL>
      </ForEachRow>
    </IfAnyRows>
  </SQLQuery>
  <Commit/>
</Job>