<?php
	// load up your config file  
	require_once("../config.php"); 

	// load the encryption routines
	require_once("../encryption.php"); 
	
	$appList = '';
	
	// Load the page and set it up depending on whether SCSM is being enforced or not.
	function loadPage()
	{
		global $config, $appList, $dashboardApp;

		$result = 6; //	Login Required
		
		try
		{
			// Get the ticket cookie that may or may not contain the SCSM ticket.
			if (isset($_COOKIE["SCSMTicketCookie"])) {
				$scsmCookie = $_COOKIE["SCSMTicketCookie"];
			}
			
			// Get the id of any user that is currently logged into the client application. For the 
			// purposes of this example we have stored this in the "LocalUserCookie" cookie
			if (isset($_COOKIE["LocalUserCookie"])) {
				$localCookie = $_COOKIE["LocalUserCookie"];
			}
		
			// Get the application setting that indicates if SCSM is being enforced. 
			$scsmEnabled = $config["scsmEnabled"];
			if ($scsmEnabled) {
				if ($scsmCookie != null)
				{
					$scsmWebService = new SoapClient('http://portaltest.synarbor.net/CentralDashboard/SCSMService.svc?wsdl');

					/*	Get the list of applications that the user has access to on their dashboard. The parameters on 
						the web service method are as follows:
					
						encryptType	      - This will always be 2 and signifies that PHP encryption is being used.

						authorisationCode     -	This is an encrypted code generated by the client application and passed 
									to the web service. It is used by the service, along with the ticket  
									parameter, to validate the method call before it is carried out. This is 
									time sensitive so don't get it until you mean to use it.
					 
						ticket		      - This is the encrypted ticket that was passed back to the client website
									when the user was successfully logged into the SCSM.
						
						dashboardApp	      - The name and URL of the portal's dashboard site. N.B. This is also 
									included in the appList as the list of apps is in a specific order.
		
						appList		      -	Returns the list of applications that the user has access to in the following 
									format:
										App Label^,^App URL^|^App Label^,^App URL^|^App Label,App URL etc.
									E.g.
										Training^,^http://portal.synarbor.net/training/^|^Issue Logger^,^http://portal.synarbor.net/issueLoger/ etc.
					  
						return value	      - This is used to store the return value from the web service call. It is a 
									flag indicating if the method was carried out successfully or not. The 
									following values can be returned:
			 
									    0 - Failed. An unknown error was encountered in the web service.
									    3 -	Valid. The authorisation code is valid and the user has a current 
										SCSM session.
									    6 -	Login Required. The authorisation code is correct but the user's 
										session has timed out or their authentication ticket has changed 
										in the database.
									   10 -	Invalid Authorisation Code. The authorisation code passed by the 
										client application could not be validated. This could be because 
										their request has timed out.
					*/
					$authCode = GetServiceAuthorisationCode($localCookie);
					$args = array('encryptType' => 2, 'authorisationCode' => $authCode, 'ticket' => $scsmCookie, 'dashboardApp' => '', 'appList' => '');
					$response = $scsmWebService->GetUserDashboardAppsWithEType($args);
					$result = $response->GetUserDashboardAppsWithETypeResult;
					$dashboardApp = $response->dashboardApp;
					$appList = $response->appList;
				}
				
				if ($result == 6) // Login Required
				{
					// The SCSM ticket has timed out in this application. Get the user to log back in and 
					// then come back to this page. So that we don't have to get every page to check to see
					// if it's returning from the SCSM we can set a ReturnUrl parameter so we can be sent
					// back to this page after we've been logged in. We'll then bounce the user off to our
					// login page and that will handle the extraction of the SCSM information once we've
					// been logged in and then send us back here.
					$returnUrl = '../login.php?ReturnUrl=' .  urlencode($_SERVER['PHP_SELF'] . $_SERVER['QUERY_STRING']);
					Header("Location: $returnUrl");
					exit();
				}
				else if ($result != 3)
				{
					// The authorisation code is invalid. Take the appropriate action...
					// In this example we'll just send the user back to the login page but you should
					// give them a bit more info					
					Header("Location: ../login.php");
					exit();
				}
			}
		}
		catch (Exception $e) {
		       echo 'Caught exception in scsmSetup:',  $e->getMessage(), "<br/>";
		}
	}
?>
 <html>
	<head>
		<title>PHP App List Example</title>
	</head>
	<body>
		<?php
			loadPage();
		?>
		<form id="frmDefault" name="frmDefault" method="post" action="">
			<h2>Welcome to your default page</h2>
			<p>This is the application list page of the website. It is here to show the user's application list and their associated links.</p>
			
			<?php 
				if ($dashboardApp != "") 
				{
					$dbApp = explode("^,^", $dashboardApp);
					echo '<p>You can see all of your apps by going to <a href="' . $dbApp[1] . '" target="_self">' . $dbApp[0] . '</a>.</p>';
				}
				
				if ($appList != "") 
				{
					echo '<p>Or you can go direct to an application by clicking on one of the following links:</p>';
					echo '<ul>';
					$apps = explode("^|^", $appList);
					foreach ($apps as &$app) {
					
						// In this example we don't want to display a link to the Dashboard in the list of
						// applications so we'll remove it as we're going
						if ($app != $dashboardApp)
						{
							$appInfo = explode("^,^", $app);
							echo '<li><a href="' . $appInfo[1] . '" target="_self">' . $appInfo[0] . '</a></li>';
						}
					}
					echo '</ul>';
				}
			?>
			<p style='text-align:center'><a href="../login.php?action=lo" id="lnkLogout" >Log Out</a></p>
		</form>
	</body>
</html>
