<?php
	// load up your config file  
	require_once("../config.php"); 

	// load the encryption routines
	require_once("../encryption.php"); 
	
	$iconCtrl = '';
	$popupCtrl = '';
	
	// Load the page and set it up depending on whether SCSM is being enforced or not.
	function loadPage()
	{
		global $config, $iconCtrl, $popupCtrl;

		$result = 6; //	Login Required
		
		try
		{
			// Get the ticket cookie that may or may not contain the SCSM ticket.
			if (isset($_COOKIE["SCSMTicketCookie"])) {
				$scsmCookie = $_COOKIE["SCSMTicketCookie"];
			}
			
			// Get the id of any user that is currently logged into the client application. For the 
			// purposes of this example we have stored this in the "LocalUserCookie" cookie
			if (isset($_COOKIE["LocalUserCookie"])) {
				$localCookie = $_COOKIE["LocalUserCookie"];
			}
		
			// Get the application setting that indicates if SCSM is being enforced. 
			$scsmEnabled = $config["scsmEnabled"];
			if ($scsmEnabled) {
				if ($scsmCookie != null)
				{
					$scsmWebService = new SoapClient('http://portaltest.synarbor.net/CentralDashboard/SCSMService.svc?wsdl');
					$scsmPath = $config["scsmPath"];

					/*	Get the markup to display the Dashboard Icon at the top right of the page. The parameters on 
						the web service method are as follows:
					
						encryptType	      - This will always be 2 and signifies that PHP encryption is being used.

						authorisationCode     -	This is an encrypted code generated by the client application and passed 
									to the web service. It is used by the service, along with the ticket  
									parameter, to validate the method call before it is carried out. This is 
									time sensitive so don't get it until you mean to use it.
					 
						ticket		      - This is the encrypted ticket that was passed back to the client website
									when the user was successfully logged into the SCSM.

						controlId	      -	The id of the control (if any) that the dashboard icon markup will be 
									contained within. Pass a null value or empty string if there isn't one.
				  
						scriptFile	      -	The relative path to the SCSM JavaScript file.
				  
						imageFile	      -	The relative path to the SCSM icon image file.
				  
						mainFrame	      - If the client application uses frames then this is the name of the frame 
									that the popup will be displayed in.
										
						usingFrames	      -	Flag indicating if the client application uses frames.

						styleClass	      - The name of the style class to use with the Icon. This can be one of the built 
									in SCSM classes or one of your own. If it is not provided "scsmDashboardIcon"
									is used.
					 
						additionalStyle       - Any additional styling to be applied to the dashboard icon on the screen. If 
									provided this will override the default style.
						
						iconCtrl	      -	Returns the markup to display the Dashboard icon at the top right of the page.
					  
						return value	      - This is used to store the return value from the web service call. It is a 
									flag indicating if the method was carried out successfully or not. The 
									following values can be returned:
			 
									    0 - Failed. An unknown error was encountered in the web service.
									    3 -	Valid. The authorisation code is valid and the user has a current 
										SCSM session.
									    6 -	Login Required. The authorisation code is correct but the user's 
										session has timed out or their authentication ticket has changed 
										in the database.
									   10 -	Invalid Authorisation Code. The authorisation code passed by the 
										client application could not be validated. This could be because 
										their request has timed out.
					*/
					$authCode = GetServiceAuthorisationCode($localCookie);
					$args = array('encryptType' => 2, 'authorisationCode' => $authCode, 'ticket' => $scsmCookie, 'controlId' => null, 
						'scriptFile' => $scsmPath . 'SCSM_JScript.js', 'imageFile' => $scsmPath . 'dashboardSml.png', 'mainFrame' => null, 
						'usingFrames' => false, 'styleClass' => 'dashboardIcon', 'additionalStyle' => 'top:10px;right:10px', 'iconCtrl' => '');
					$response = $scsmWebService->GetDashboardIconControlWithStyle($args);
					$result = $response->GetDashboardIconControlWithStyleResult;
					$iconCtrl = $response->iconCtrl;

					if ($result == 3) // Valid
					{
						/*	Now get the markup to display the list of applications that the user has access to from their 
							dashboard. The parameters on the web service method are as follows:
					
							authorisationCode     -	This is an encrypted code generated by the client application and passed 
										to the web service. It is used by the service, along with the ticket  
										parameter, to validate the method call before it is carried out. This is 
										time sensitive so don't get it until you mean to use it.
					 
							ticket		      - This is the encrypted ticket that was passed back to the client website
										when the user was successfully logged into the SCSM.

							controlId	      -	The id of the control (if any) that the dashboard popup markup will be 
										contained within. Pass a null value or empty string if there isn't one.
				  
							title		      -	The title displayed at the top of the popup.
				 
							scriptFile	      -	The relative path to the SCSM JavaScript file.
				  
							mainFrame	      - If the client application uses frames then this is the name of the frame 
										that the popup will be displayed in.
										
							usingFrames	      -	Flag indicating if the client application uses frames.
				  
							popupCtrl	      -	Returns the markup to display the Dashboard popup control containing the 
										list of applications.
					  
							return value	      - This is used to store the return value from the web service call. It is a 
										flag indicating if the method was carried out successfully or not. The 
										following values can be returned:
			 
										    0 - Failed. An unknown error was encountered in the web service.
										    3 -	Valid. The authorisation code is valid and the user has a current 
											SCSM session.
										    6 -	Login Required. The authorisation code is correct but the user's 
											session has timed out or their authentication ticket has changed 
											in the database.
										   10 -	Invalid Authorisation Code. The authorisation code passed by the 
											client application could not be validated. This could be because 
											their request has timed out.
						*/
								
						$authCode = GetServiceAuthorisationCode($localCookie);
						$args = array('encryptType' => 2, 'authorisationCode' => $authCode, 'ticket' => $scsmCookie, 'controlId' => null, 
							'title' => 'My Dashboard', 'scriptFile' => $scsmPath . 'SCSM_JScript.js', 'mainFrame' => null, 
							'usingFrames' => false, 'popupCtrl' => '');
						$response = $scsmWebService->GetDashboardPopupControlWithEType($args);
						$result = $response->GetDashboardPopupControlWithETypeResult;
						$popupCtrl = $response->popupCtrl;
					}
				}

				if ($result == 6) // Login Required
				{
					// The SCSM ticket has timed out in this application. Get the user to log back in and 
					// then come back to this page. So that we don't have to get every page to check to see
					// if it's returning from the SCSM we can set a ReturnUrl parameter so we can be sent
					// back to this page after we've been logged in. We'll then bounce the user off to our
					// login page and that will handle the extraction of the SCSM information once we've
					// been logged in and then send us back here.
					$returnUrl = '../login.php?ReturnUrl=' .  urlencode($_SERVER['PHP_SELF'] . $_SERVER['QUERY_STRING']);
					Header("Location: $returnUrl");
					exit();
				}
				else if ($result != 3)
				{
					// The authorisation code is invalid. Take the appropriate action...
					// In this example we'll just send the user back to the login page but you should
					// give them a bit more info					
					Header("Location: ../login.php");
					exit();
				}
			}
		}
		catch (Exception $e) {
		       echo 'Caught exception in scsmSetup:',  $e->getMessage(), "<br/>";
		}
	}
?>
 <html>
	<head>
		<title>PHP Icon Example</title>
		<link href="<?php echo $config["scsmPath"] . 'SCSM.css'; ?>" rel="stylesheet" type="text/css" />
	</head>
	<body>
		<?php
			loadPage();
		?>
		<form id="frmDefault" name="frmDefault" method="post" action="">
			<?php echo $iconCtrl . $popupCtrl; ?>
			<h2>Welcome to your default page</h2>
			<p>This is the Icon Example page of the website. It is here to show the SCSM Dashboard icon and the user's application list.</p>
			<p style='text-align:center'><a href="../login.php?action=lo" id="lnkLogout" >Log Out</a></p>
		</form>
	</body>
</html>
